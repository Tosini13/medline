{"version":3,"sources":["components/Layout/LoggedInLinks.js","store/actions/authActions.js","components/Layout/LoggedOutLinks.js","components/Layout/Navbar.js","components/Line/LinesList.js","components/Home.js","components/Line/EditLineEvent.js","store/actions/lineActions.js","components/Line/LineEvent.js","components/Line/CreateLineEvent.js","components/Line/EditLine.js","components/Line/LineDashboard.js","components/Extra/SplashScreen.js","components/Line/Line.js","components/Line/CreateLine.js","components/Auth/SignIn.js","components/Auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/lineReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","exact","to","onClick","LoggedOutLinks","Navbar","this","loggedIn","Component","state","firebase","uid","LinesList","lines","map","line","id","key","style","backgroundColor","color","title","Home","compose","firestore","ordered","firestoreConnect","console","log","collection","where","EditLineEvent","updateEvent","event","date","description","changeEditState","handleChange","e","setState","target","value","handleChangeDate","handleCancel","handle","createEvent","toDate","onChange","selected","dateFormat","showYearDropdown","showMonthDropdown","placeholder","lineId","eventId","getFirestore","doc","update","LineEvent","opened","edit","handleDelete","deleteEvent","handleEdit","handleOpen","eventClass","eventIcon","eventIconColor","moment","format","CreateLineEvent","addEvent","iter","Date","add","EditLine","colors","name","handleChangeColor","handleSubmit","updateLine","history","push","signedIn","radios","colorClass","ownProps","LineDashboard","useState","setEdit","backToLine","deleteLine","SplashScreen","styleTrace","height","width","styleText","display","position","top","left","fontSize","transform","justifyContent","alignItems","padding","margin","match","params","line_id","data","events","delete","subcollections","orderBy","storeAs","borderColor","mainColor","CreateLine","addLine","ownerId","SignIn","email","password","preventDefault","signIn","authError","onSubmit","htmlFor","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","user","set","initials","App","path","component","Line","Boolean","window","location","hostname","initState","authReducer","action","message","lineReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","attachAuthIsReady","AuthIsLoaded","children","useSelector","isLoaded","rrfProps","config","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ca2365e1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst LoggedInLinks = (props) => {\r\n    return (\r\n        <ul className='right'>\r\n            <li> <NavLink exact to={'/'}>Home</NavLink></li>\r\n            <li> <NavLink to={'/create'}>Create Line</NavLink></li>\r\n            <li> <a onClick={props.signOut}>Log out</a></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoggedInLinks);","// import { firestore } from \"firebase\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password,\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_EROOR', err })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNOUT_EROOR', err })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password,\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LoggedOutLinks = (props) => {\r\n    return (\r\n        <ul className='right'>\r\n            <li> <NavLink to={'/signup'}>Sign up</NavLink></li>\r\n            <li> <NavLink to={'/signin'}>Sign in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default LoggedOutLinks;","import React, { Component } from \"react\";\r\nimport LoggedInLinks from \"./LoggedInLinks\";\r\nimport LoggedOutLinks from \"./LoggedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className='nav-wrapper grey darken-3'>\r\n                <div className='container'>\r\n                    {this.props.loggedIn ? <LoggedInLinks /> : <LoggedOutLinks />}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedIn: state.firebase.auth.uid ? true : false\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LinesList = ({ lines }) => {\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h3>Your lines list:</h3>\r\n            <div className='lineList'>\r\n                {lines && lines.map(line => {\r\n                    return (\r\n                        <Link to={'/line/' + line.id} key={line.id}>\r\n                            <div className='card z-depth-1'>\r\n                                <div className='badge' style={{ backgroundColor: line.color }}></div>\r\n                                <p className='card-title grey-text'>{line.title}</p>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LinesList;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport LinesList from './Line/LinesList'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    componentDidUpdate() {\r\n        const { lines, auth } = this.props;\r\n    }\r\n\r\n    render() {\r\n        const { lines, auth } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <LinesList lines={lines} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lines: state.firestore.ordered.lines,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(props => {\r\n        if (!props.auth.uid) return []\r\n        console.log(props);\r\n        return [\r\n            {\r\n                collection: 'lines',\r\n                where: [['ownerId', '==', props.auth.uid]]\r\n            }\r\n        ]\r\n    })\r\n)(Home);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateEvent } from '../../store/actions/lineActions'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass EditLineEvent extends Component {\r\n\r\n    updateEvent = () => {\r\n        let event = {\r\n            type: this.state.type,\r\n            date: this.state.date,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n        };\r\n        this.props.updateEvent(this.props.id, this.state.id, event);\r\n        this.props.changeEditState();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeDate = (date) => {\r\n        this.setState({\r\n            date\r\n        })\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.changeEditState();\r\n    }\r\n\r\n\r\n    state = {\r\n        handle: this.createEvent,\r\n        ...this.props.event,\r\n        date: this.props.event.date.toDate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='event event-form'>\r\n                <div className='dots'>\r\n                    <div className='dot dot-cancel' onClick={this.handleCancel}>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className='dot dot-create dot-update' onClick={this.updateEvent}>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n                <form className='content content-form'>\r\n                    <select id='type' onChange={this.handleChange} value={this.state.type}>\r\n                        <option value=\"MA\">Mediacal Appointment</option>\r\n                        <option value=\"MT\">Mediacal Test</option>\r\n                        <option value=\"O\">Occurance</option>\r\n                        <option value=\"S\">Surgery</option>\r\n                    </select>\r\n                    <DatePicker id='date' className='center'\r\n                        selected={this.state.date}\r\n                        onChange={this.handleChangeDate}\r\n                        dateFormat=\"yyyy MMMM d\"\r\n                        showYearDropdown\r\n                        showMonthDropdown\r\n                    />\r\n                    <input id='title' placeholder='Title' onChange={this.handleChange} value={this.state.title} />\r\n                    <textarea id='description' placeholder='Description' onChange={this.handleChange} value={this.state.description}></textarea>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateEvent: (lineId, eventId, event) => { dispatch(updateEvent(lineId, eventId, event)) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EditLineEvent);","export const addLine = (line) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n\r\n        const ownerId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('lines').add({\r\n            ...line,\r\n            ownerId\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_LINE', line });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_LINE_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteLine = (id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('lines').doc(id).delete()\r\n            .then(() => {\r\n                dispatch({ type: 'DELETE_LINE' });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'DELETE_LINE_ERROR', err });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateLine = (id, line) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('lines').doc(id).update({\r\n            ...line\r\n        }).then(() => {\r\n            dispatch({ type: 'UPDATE_LINE', line });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'UPDATE_LINE_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const addEvent = (id, event) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('lines').doc(id).collection('events').add({\r\n            ...event\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_EVENT', id, event });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_EVENT_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteEvent = (lineId, eventId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('lines').doc(lineId).collection('events').doc(eventId).delete()\r\n            .then(() => {\r\n                dispatch({ type: 'DELETE_EVENT', lineId, eventId });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'DELETE_EVENT_ERROR', err });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateEvent = (lineId, eventId, event) => {\r\n    console.log('update action');\r\n    console.log(lineId, eventId, event);\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('lines').doc(lineId).collection('events').doc(eventId).update({\r\n            ...event\r\n        })\r\n            .then(() => {\r\n                dispatch({ type: 'UPDATE_EVENT', lineId, eventId, event });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'UPDATE_EVENT_ERROR', err });\r\n            })\r\n\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport '../../css/fontello/css/fontello.css'\r\nimport moment from 'moment'\r\nimport EditLineEvent from './EditLineEvent'\r\n\r\nclass LineEvent extends Component {\r\n    state = {\r\n        opened: false,\r\n        edit: false\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteEvent(this.props.id, this.props.event.id);\r\n    }\r\n\r\n    handleEdit = () => {\r\n        this.setState({ edit: !this.state.edit });\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ opened: !this.state.opened });\r\n    }\r\n\r\n    changeEditState = () => {\r\n        this.setState({ edit: !this.state.edit });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.edit) {\r\n\r\n            let eventClass = 'event';\r\n            let eventIcon = '';\r\n            let eventIconColor = '';\r\n            if (this.state.opened) {\r\n                eventClass += ' opened'\r\n            }\r\n            switch (this.props.event.type) {\r\n                case 'MA':\r\n                    eventIcon = 'icon-calendar';\r\n                    eventIconColor = 'blue';\r\n                    break;\r\n                case 'MT':\r\n                    eventIcon = 'icon-stethoscope';\r\n                    eventIconColor = 'green';\r\n                    break;\r\n                case 'O':\r\n                    eventIcon = 'icon-blood';\r\n                    eventIconColor = 'red';\r\n                    break;\r\n                case 'S':\r\n                    eventIcon = 'icon-heartbeat';\r\n                    eventIconColor = 'red';\r\n                    break;\r\n                default:\r\n                    eventIcon = '';\r\n                    break;\r\n\r\n            }\r\n            return (\r\n                <div className={eventClass}>\r\n                    <div className='dots'>\r\n                        <div className='dot dot-remove' onClick={this.handleDelete}>\r\n                            <i className='icon-trash-empty'></i>\r\n                        </div>\r\n                        <div className='dot dot-edit' onClick={this.handleEdit}>\r\n                            <i className='icon-pencil-1'></i>\r\n                        </div>\r\n                        <div className='dot' onClick={this.handleOpen}>\r\n                            <i className={eventIcon} style={{ color: eventIconColor }}></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content card'>\r\n                        <p className='date'>{moment(this.props.event.date.toDate()).format('yyyy MMMM DD')}</p>\r\n                        <p className='title'>{this.props.event.title}</p>\r\n                        <p className='description'>{this.props.event.description}</p>\r\n                    </div>\r\n                </div >\r\n            )\r\n        } else {\r\n            console.log(this.props.event.id);\r\n            return (\r\n                <EditLineEvent event={this.props.event} id={this.props.id} changeEditState={this.changeEditState} />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LineEvent;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEvent } from '../../store/actions/lineActions'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass CreateLineEvent extends Component {\r\n\r\n    addEvent = () => {\r\n        let event = {\r\n            type: this.state.type,\r\n            date: this.state.date,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n        };\r\n        this.props.addEvent(this.props.id, event);\r\n        this.setState({\r\n            state: 0,\r\n            handle: this.createEvent,\r\n            id: this.props.iter,\r\n            type: 'MA',\r\n            title: '',\r\n            description: ''\r\n        })\r\n    }\r\n\r\n    createEvent = () => {\r\n        this.setState({ handle: this.addEvent, state: 1 });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeDate = (date) => {\r\n        this.setState({\r\n            date\r\n        })\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ handle: this.createEvent, state: 0 });\r\n    }\r\n\r\n    state = {\r\n        state: 0,\r\n        handle: this.createEvent,\r\n        date: new Date(),\r\n        type: 'MA',\r\n        title: '',\r\n        description: ''\r\n    }\r\n\r\n    render() {\r\n        let eventClass = 'event event-form ';\r\n        if (this.state.state === 0) {\r\n            eventClass += 'event-disabled';\r\n        }\r\n        return (\r\n            <div className={eventClass}>\r\n                <div className='dots'>\r\n                    <div className='dot dot-cancel' onClick={this.handleCancel}>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className='dot dot-create' onClick={this.state.handle}>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n                <form className='content content-form'>\r\n                    <select id='type' onChange={this.handleChange}>\r\n                        <option value=\"MA\">Mediacal Appointment</option>\r\n                        <option value=\"MT\">Mediacal Test</option>\r\n                        <option value=\"O\">Occurance</option>\r\n                        <option value=\"S\">Surgery</option>\r\n                    </select>\r\n                    <DatePicker id='date' className='center'\r\n                        selected={this.state.date}\r\n                        onChange={this.handleChangeDate}\r\n                        dateFormat=\"yyyy MMMM d\"\r\n                        showYearDropdown\r\n                        showMonthDropdown\r\n                    />\r\n                    <input id='title' placeholder='Title' onChange={this.handleChange} value={this.state.title} />\r\n                    <textarea id='description' placeholder='Description' onChange={this.handleChange} value={this.state.description}></textarea>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addEvent: (id, event) => { dispatch(addEvent(id, event)) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateLineEvent);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateLine } from '../../store/actions/lineActions'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass EditLine extends Component {\r\n\r\n    colors = ['black', '#c4c4c4', '#d1c624', '#001a8f', '#068f09', '#ad0707', '#0abbc4'];\r\n\r\n    state = {\r\n        title: this.props.line.title,\r\n        color: this.props.line.color\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeColor = (e) => {\r\n        this.setState({\r\n            color: e.target.id\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.props.updateLine(this.props.id, this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.signedIn) return <Redirect to='/signin' />\r\n\r\n        let radios = this.colors.map(color => {\r\n            let colorClass = 'color';\r\n            if (this.state.color === color) {\r\n                colorClass += ' chosen'\r\n            }\r\n            return (\r\n                <div id={color} key={color} className={colorClass} onClick={this.handleChangeColor} style={{\r\n                    backgroundColor: color,\r\n                }}>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <form className='container createLine'>\r\n                <label>Title</label>\r\n                <input name='title' onChange={this.handleChange} value={this.state.title} />\r\n                <div className='chooseColor'>\r\n                    {radios}\r\n                </div>\r\n                <div className='btn' onClick={this.handleSubmit} >UPDATE LINE</div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        signedIn: state.firebase.auth.uid ? true : false\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLine: (id, line) => dispatch(updateLine(id, line))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditLine);","import React, { useState } from 'react'\r\nimport EditLine from './EditLine';\r\n\r\nconst LineDashboard = (props) => {\r\n\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    if (edit) {\r\n        return (\r\n            <EditLine line={props.props.line} id={props.props.id} history={props.props.history} backToLine={() => { setEdit(false) }} />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='lineDashboard'>\r\n                <p className='lineTitle'>{props.props.line.title}</p>\r\n                <div className='btns-container'>\r\n                    <div className='btn' onClick={() => {\r\n                        console.log('edit');\r\n                        setEdit(true);\r\n                    }} >\r\n                        <i className='icon-pencil-1' style={{ color: 'blue' }}></i>\r\n                    </div>\r\n                    <div className='btn' onClick={() => { props.deleteLine(props.props.id); props.props.history.push('/') }} >\r\n                        <i className='icon-trash-empty' style={{ color: 'red' }}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LineDashboard;","import React from 'react'\r\n\r\nconst SplashScreen = (props) => {\r\n    const styleScreen = {\r\n        position: 'absolute',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        top: '0',\r\n        left: '0'\r\n    }\r\n    const styleContainer = {\r\n        position: 'absolute',\r\n        fontSize: '40px',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // border: 'grey dashed 2px',\r\n        // boxShadow: '0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)',\r\n        padding: '15px 20px',\r\n        backgroundColor: 'white',\r\n        // backgroundColor: '#019785',\r\n    }\r\n    const styleTrace = {\r\n        height: '100%',\r\n        width: '10px',\r\n        height: '100%',\r\n        width: '10px',\r\n        borderLeft: 'red dashed 3px',\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '64%'\r\n    }\r\n    const styleText = {\r\n        display: 'block',\r\n        color: 'white',\r\n        color: '#019785',\r\n        margin: '0',\r\n    }\r\n    return (\r\n        <div className='splashScreen' style={styleScreen}>\r\n            <div style={styleContainer}>\r\n                <p style={styleText}>\r\n                    MedL<span style={{ color: '#ad0707', margin: '0px 5px' }}></span>ne\r\n                    <div style={styleTrace}></div>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplashScreen;","import React from \"react\";\r\nimport '../../css/line.css';\r\nimport LineEvent from './LineEvent.js';\r\nimport CreateLineEvent from './CreateLineEvent.js';\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { deleteEvent, deleteLine } from '../../store/actions/lineActions'\r\nimport EditLine from './EditLine'\r\nimport LineDashboard from './LineDashboard'\r\nimport SplashScreen from \"../Extra/SplashScreen\";\r\n\r\nconst Line = (props) => {\r\n\r\n    if (!props.signedIn) return <Redirect to='/signin' />\r\n\r\n    const { line, events } = props;\r\n    if (line && events) {\r\n        const style = {\r\n            borderColor: line.color,\r\n        }\r\n\r\n        return (\r\n            <div className='lineContainer container'>\r\n                <LineDashboard props={props} deleteLine={props.deleteLine} />\r\n                <div className='eventsContainer'>\r\n                    <div className='line' style={style}>\r\n                    </div>\r\n                    {events && events.map((event) => {\r\n                        return (\r\n                            <LineEvent key={event.id} id={props.id} event={event} mainColor={props.line.color} deleteEvent={props.deleteEvent} />\r\n                        )\r\n                    })}\r\n                    <CreateLineEvent id={props.id} mainColor={line.color} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <SplashScreen />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.line_id;\r\n    let lines = state.firestore.data.lines;\r\n    let line = lines ? lines[id] : null;\r\n    return {\r\n        line,\r\n        id,\r\n        signedIn: state.firebase.auth.uid ? true : false,\r\n        events: state.firestore.ordered.events\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteEvent: (lineId, eventId) => { dispatch(deleteEvent(lineId, eventId)) },\r\n        deleteLine: (id) => { dispatch(deleteLine(id)) }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((props) => {\r\n        return [{\r\n            collection: 'lines',\r\n            doc: props.match.params.line_id,\r\n            subcollections: [{ collection: 'events', orderBy: ['date', 'asc'] }],\r\n            storeAs: 'events'\r\n        }]\r\n    })\r\n)(Line);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLine } from '../../store/actions/lineActions'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateLine extends Component {\r\n\r\n    colors = ['black', '#c4c4c4', '#d1c624', '#001a8f', '#068f09', '#ad0707', '#0abbc4'];\r\n\r\n    state = {\r\n        title: '',\r\n        color: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeColor = (e) => {\r\n        this.setState({\r\n            color: e.target.id\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.props.addLine(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.signedIn) return <Redirect to='/signin' />\r\n\r\n        let radios = this.colors.map(color => {\r\n            let colorClass = 'color';\r\n            if (this.state.color === color) {\r\n                colorClass += ' chosen'\r\n            }\r\n            return (\r\n                <div id={color} key={color} className={colorClass} onClick={this.handleChangeColor} style={{\r\n                    backgroundColor: color,\r\n                }}>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <form className='container createLine'>\r\n                <label>Title</label>\r\n                <input name='title' onChange={this.handleChange} value={this.state.title} />\r\n                <div className='chooseColor'>\r\n                    {radios}\r\n                </div>\r\n                <div className='btn' onClick={this.handleSubmit} >ADD LINE</div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        signedIn: state.firebase.auth.uid ? true : false\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addLine: (line) => dispatch(addLine(line))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateLine);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { signedIn, authError } = this.props;\r\n        if (signedIn) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        signedIn: state.firebase.auth.uid ? true : false\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from '../../store/actions/authActions'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.signedIn) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First name:</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last name:</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            {this.props.authError ? <p>{this.props.authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        signedIn: state.firebase.auth.uid ? true : false\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport Navbar from './components/Layout/Navbar';\r\nimport Home from './components/Home';\r\nimport Line from './components/Line/Line';\r\nimport CreateLine from './components/Line/CreateLine';\r\nimport SignIn from './components/Auth/SignIn';\r\nimport SignUp from './components/Auth/SignUp';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/create' component={CreateLine} />\r\n            <Route path='/signin' component={SignIn} />\r\n            <Route path='/signup' component={SignUp} />\r\n            <Route path='/line/:line_id' component={Line} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('logged in');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'LOGIN_EROOR':\r\n            console.log('logged in errror');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signed out');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_EROOR':\r\n            console.log('signed out error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signed up');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signed up error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    lines: [\r\n        {\r\n            id: 0, title: 'Right knee', color: 'red',\r\n            events: [\r\n                {\r\n                    id: 0,\r\n                    type: 'O',\r\n                    title: 'Ligaments breaking',\r\n                    description: 'Breaking ligaments while playing football'\r\n                },\r\n                {\r\n                    id: 1,\r\n                    type: 'MT',\r\n                    title: 'Resonance of right knee',\r\n                    description: 'Right knee was tested after breaking the anterior cruciate ligaments. Right knee was tested after breaking the anterior cruciate ligaments. Right knee was tested after breaking the anterior cruciate ligaments.'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 1, title: 'Back', color: 'green',\r\n            events: [\r\n                {\r\n                    id: 0,\r\n                    type: 'O',\r\n                    title: 'Pain in back',\r\n                    description: 'Pain in back when working with laptop'\r\n                },\r\n                {\r\n                    id: 1,\r\n                    type: 'MA',\r\n                    title: 'Skoliosis affirmation',\r\n                    description: 'Dr. Smith affirmed scoliosis'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst lineReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_LINE':\r\n            console.log('line added');\r\n            return state;\r\n        case 'ADD_LINE_ERROR':\r\n            console.log('line addition error');\r\n            return state;\r\n        case 'DELETE_LINE':\r\n            console.log('line deleted');\r\n            return state;\r\n        case 'DELETE_LINE_ERROR':\r\n            console.log('line deletion error');\r\n            return state;\r\n        case 'UPDATE_LINE':\r\n            console.log('line updated');\r\n            return state;\r\n        case 'UPDATE_LINE_ERROR':\r\n            console.log('line update error');\r\n            return state;\r\n        case 'ADD_EVENT':\r\n            console.log('event added');\r\n            return state;\r\n        case 'ADD_EVENT_ERROR':\r\n            console.log('event addition error');\r\n            return state;\r\n        case 'DELETE_EVENT':\r\n            console.log('event deleted');\r\n            return state;\r\n        case 'DELETE_EVENT_ERROR':\r\n            console.log('event deletion error');\r\n            return state;\r\n        case 'UPDATE_EVENT':\r\n            console.log('line updated');\r\n            return state;\r\n        case 'UPDATE_EVENT_ERROR':\r\n            console.log('line update error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default lineReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport lineReducer from \"./lineReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    line: lineReducer,\r\n    firestore: firestoreReducer, //retrieve data from db\r\n    firebase: firebaseReducer, //sync auth status with firebase\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAo5h3OUNmYxDZqiu1yDlZEKsyw-I0Nkx8\",\r\n    authDomain: \"medline-9bd59.firebaseapp.com\",\r\n    databaseURL: \"https://medline-9bd59.firebaseio.com\",\r\n    projectId: \"medline-9bd59\",\r\n    storageBucket: \"medline-9bd59.appspot.com\",\r\n    messagingSenderId: \"1013765246466\",\r\n    appId: \"1:1013765246466:web:a83a0701eb179a37aa211b\",\r\n    measurementId: \"G-NSQEXBGSGM\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nfirebase.firestore();\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, compose, applyMiddleware } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore'\r\nimport { getFirebase, ReactReduxFirebaseProvider, isLoaded } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\nimport firebase from 'firebase/app'\r\nimport SplashScreen from './components/Extra/SplashScreen';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n    reduxFirestore(fbConfig, { attachAuthIsReady: true })\r\n  )\r\n);\r\n\r\n// store.subscribe(() => {\r\n//   console.log('store changed!');\r\n//   console.log(store.getState());\r\n// });\r\n\r\nfunction AuthIsLoaded({ children }){\r\n  const auth = useSelector(state => state.firebase.auth)\r\n  if (!isLoaded(auth)) return <SplashScreen />\r\n  return children\r\n}\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: fbConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <Provider store={store}>\r\n        <AuthIsLoaded>\r\n          <App />\r\n        </AuthIsLoaded>\r\n      </Provider>\r\n    </ReactReduxFirebaseProvider>\r\n  // </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}